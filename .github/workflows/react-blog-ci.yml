name: build-test-deploy-to-vercel

on:
  push:
    branches:
      - main  # Trigger workflow on push to the 'main' branch
  pull_request:
    branches:
      - main  # Trigger workflow on a pull request to 'main'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      # Checkout code from the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Node.js for the build process
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'  # Specify the Node.js version you want

      # Create the .env file from GitHub secrets
      - name: Create .env file
        run: |
          echo "VITE_TINYMCE_API_KEY=${{ secrets.VITE_TINYMCE_API_KEY }}" >> .env
          echo "VITE_FIREBASE_API_KEY=${{ secrets.VITE_FIREBASE_API_KEY }}" >> .env
          echo "VITE_FIREBASE_AUTH_DOMAIN=${{ secrets.VITE_FIREBASE_AUTH_DOMAIN }}" >> .env
          echo "VITE_FIREBASE_PROJECT_ID=${{ secrets.VITE_FIREBASE_PROJECT_ID }}" >> .env
          echo "VITE_FIREBASE_STORAGE_BUCKET=${{ secrets.VITE_FIREBASE_STORAGE_BUCKET }}" >> .env
          echo "VITE_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.VITE_FIREBASE_MESSAGING_SENDER_ID }}" >> .env
          echo "VITE_FIREBASE_APP_ID=${{ secrets.VITE_FIREBASE_APP_ID }}" >> .env
          echo "VITE_FIREBASE_MEASUREMENT_ID=${{ secrets.VITE_FIREBASE_MEASUREMENT_ID }}" >> .env

      # Install dependencies
      - name: Install dependencies
        run: |
          npm install

      # Run the build process
      - name: Build project
        run: |
          npm run build

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: build  # Wait for the 'build' job to complete
    steps:
      # Checkout code from the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Node.js for testing
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'

      # Create the .env file for tests
      - name: Create .env file
        run: |
          echo "VITE_TINYMCE_API_KEY=${{ secrets.VITE_TINYMCE_API_KEY }}" >> .env
          echo "VITE_FIREBASE_API_KEY=${{ secrets.VITE_FIREBASE_API_KEY }}" >> .env
          echo "VITE_FIREBASE_AUTH_DOMAIN=${{ secrets.VITE_FIREBASE_AUTH_DOMAIN }}" >> .env
          echo "VITE_FIREBASE_PROJECT_ID=${{ secrets.VITE_FIREBASE_PROJECT_ID }}" >> .env
          echo "VITE_FIREBASE_STORAGE_BUCKET=${{ secrets.VITE_FIREBASE_STORAGE_BUCKET }}" >> .env
          echo "VITE_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.VITE_FIREBASE_MESSAGING_SENDER_ID }}" >> .env
          echo "VITE_FIREBASE_APP_ID=${{ secrets.VITE_FIREBASE_APP_ID }}" >> .env
          echo "VITE_FIREBASE_MEASUREMENT_ID=${{ secrets.VITE_FIREBASE_MEASUREMENT_ID }}" >> .env

      # Install dependencies
      - name: Install dependencies
        run: |
          npm install

      # Run tests
      - name: Run tests
        run: |
          timeout 10s npm run dev

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: test  # Wait for the 'test' job to complete
    steps:
      # Checkout code from the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Node.js for deployment
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'

      # Create the .env file for deployment
      - name: Create .env file
        run: |
          echo "VITE_TINYMCE_API_KEY=${{ secrets.VITE_TINYMCE_API_KEY }}" >> .env
          echo "VITE_FIREBASE_API_KEY=${{ secrets.VITE_FIREBASE_API_KEY }}" >> .env
          echo "VITE_FIREBASE_AUTH_DOMAIN=${{ secrets.VITE_FIREBASE_AUTH_DOMAIN }}" >> .env
          echo "VITE_FIREBASE_PROJECT_ID=${{ secrets.VITE_FIREBASE_PROJECT_ID }}" >> .env
          echo "VITE_FIREBASE_STORAGE_BUCKET=${{ secrets.VITE_FIREBASE_STORAGE_BUCKET }}" >> .env
          echo "VITE_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.VITE_FIREBASE_MESSAGING_SENDER_ID }}" >> .env
          echo "VITE_FIREBASE_APP_ID=${{ secrets.VITE_FIREBASE_APP_ID }}" >> .env
          echo "VITE_FIREBASE_MEASUREMENT_ID=${{ secrets.VITE_FIREBASE_MEASUREMENT_ID }}" >> .env

      # Deploy to Vercel using the Vercel CLI
      - name: Deploy to Vercel
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}  # Ensure VERCEL_TOKEN is stored in GitHub secrets
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}  # Ensure VERCEL_ORG_ID is stored in GitHub secrets
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}  # Ensure VERCEL_PROJECT_ID is stored in GitHub secrets
        run: |
          npm install -g vercel  # Install the Vercel CLI
          vercel --token $VERCEL_TOKEN --prod --confirm  # Deploy to Vercel with the --token argument